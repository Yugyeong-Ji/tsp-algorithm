# -*- coding: utf-8 -*-
"""1015_final

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VRMQgb_P6p4f_iL1y6V5RHz3o439t3Ek
"""

data = open('/content/drive/MyDrive/w02-project-1-sample.txt')
lines = data.readlines()

A = []
for line in lines:
    A.append(line.split())

costs = []
for i in A:
    costs.append(list(map(int, i)))

import random
import time
import numpy as np
from google.colab import files

def Greedy(costs):
    # 
    curCity, nextCity, pathCost, Counter = 0, 0, 0, 0
    INF = int(1e9)
    Min = INF
    Visited = []
    Visited.append(0)
    cityNumber = list(range(0, 500))

    while curCity < cityNum and nextCity < cityNum:
        if Counter >= cityNum - 1:
            break
        if nextCity not in Visited and nextCity != curCity:
            if costs[curCity][nextCity] < Min:
                Min = costs[curCity][nextCity]
                cityNumber[Counter] = nextCity + 1
        nextCity += 1
        if nextCity == cityNum:
            pathCost += Min
            Min = INF
            Visited.append(cityNumber[Counter] - 1)
            nextCity = 0
            curCity = cityNumber[Counter] - 1
            Counter += 1
    curCity = cityNumber[Counter - 1] - 1
    for nextCity in range(cityNum):
        if curCity != nextCity and costs[curCity][nextCity] < Min:
            Min = costs[curCity][nextCity]
            cityNumber[Counter] = nextCity + 1

    pathCost += costs[Visited[-1]][0]
    Visited.append(Visited[0])

    # 지역 탐색 알고리즘 : 2-Opt
    timePossible = True
    newPathCost = 0
    while timePossible:
        newSolution = Visited.copy()
        x = np.random.choice(range(1, len(Visited)-2))
        y = np.random.choice(range(x+1, len(Visited)))
        if y-x != 1:
            newSolution[x:y] = reversed(Visited[x:y])

            for i in range(len(newSolution) - 1):
                newPathCost += costs[newSolution[i]][newSolution[i+1]]

            newPathCost += costs[newSolution[-1]][0]
            # Answer within 1 min
            if time.time() - start < 60:
                if newPathCost < pathCost:
                    pathCost = newPathCost
                    Visited = newSolution
                else:
                    newPathCost = 0
                    pass
            else:
                timePossible = False
        else:
            continue

    # Saving Result
    Result = ""
    for i in Visited:
        Result += str(i) + "\t"
    
    # Create File Output
    result = open('Result.txt', 'w')
    result.write(str(pathCost) + "\t")
    result.write(Result)
    result.close()

    # Output File Download
    files.download('Result.txt')

start = time.time()
cityNum = len(costs)
Greedy(costs)